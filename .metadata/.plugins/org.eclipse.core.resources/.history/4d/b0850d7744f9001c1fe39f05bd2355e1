package com.flightapp.flightservice.service.impl;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.flightapp.exceptionhandler.exceptions.ResourceNotFoundException;
import com.flightapp.flightservice.dto.AirlineRequest;
import com.flightapp.flightservice.dto.AirlineResponse;
import com.flightapp.flightservice.model.Airline;
import com.flightapp.flightservice.repository.AirlineRepository;
import com.flightapp.flightservice.service.AirlineService;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class AirlineServiceImpl implements AirlineService {

	private final AirlineRepository airlineRepository;

	private AirlineResponse mapToDto(Airline airline) {
		return AirlineResponse.builder().id(airline.getId().toString()).airlineName(airline.getAirlineName())
				.airlineLogo(airline.getAirlineLogo()).build();
	}

	private Airline mapToModel(AirlineRequest airlineRequest) {
		return Airline.builder().airlineName(airlineRequest.getAirlineName())
				.airlineLogo(airlineRequest.getAirlineLogo()).build();
	}

	@Override
	public void registerNewAirline(AirlineRequest airlineRequest) {
		Airline airline = Airline.builder().airlineName(airlineRequest.getAirlineName())
				.airlineLogo(airlineRequest.getAirlineLogo()).build();
		airlineRepository.save(airline);

	}

	@Override
	public List<AirlineResponse> findAll() {
		List<Airline> airlines = airlineRepository.findAll();
		return airlines.stream().map(this::mapToDto).collect(Collectors.toList());
	}

	@Override
	public AirlineResponse updateAirline(Long airlineId, AirlineRequest airlineRequest) {
		Airline updateAirline = airlineRepository.findById(airlineId)
				.map(airline -> airlineRepository.save(mapToModel(airlineRequest)))
				.orElseThrow(() -> new ResourceNotFoundException(
						"Airline Details not found for name: " + airlineRequest.getAirlineName()));
		return mapToDto(updateAirline);
	}

}
