package com.flightapp.flightservice.controller;

import java.util.List;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.flightapp.flightservice.dto.FlightRequest;
import com.flightapp.flightservice.dto.FlightResponse;
import com.flightapp.flightservice.model.Flight;
import com.flightapp.flightservice.service.FlightService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/flight")
@RequiredArgsConstructor
public class FlightController {

	private final FlightService flightService;

	@PostMapping("/")
	public FlightResponse addFlightDetails(@RequestBody FlightRequest flightRequest) {
		return flightService.addNewFlightDetails(flightRequest);
	}

	@GetMapping("/search")
	public List<FlightResponse> getAllFlights() {
		return flightService.findAll();
	}

	@PutMapping("/")
	public FlightResponse updateFlightDetails(@RequestBody FlightRequest flightRequest) {
		return flightService.updateFlightDetails(flightRequest);
	}

	@GetMapping("/airline/{airlineId}/flights")
	public Flight getAllFlightsByAirlineId(@PathVariable(value = "airlineId") Long airlineId) {
		return flightService.getAllByAirlineId(airlineId);
	}
	
	@DeleteMapping("/")
    public ResponseEntity<?> deleteComment(@PathVariable (value = "postId") Long postId,
                              @PathVariable (value = "commentId") Long commentId) {
        return commentRepository.findByIdAndPostId(commentId, postId).map(comment -> {
            commentRepository.delete(comment);
            return ResponseEntity.ok().build();
        }).orElseThrow(() -> new ResourceNotFoundException("Comment not found with id " + commentId + " and postId " + postId));
    }

}
