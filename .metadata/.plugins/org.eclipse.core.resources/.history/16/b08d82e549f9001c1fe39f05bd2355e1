package com.flightapp.flightservice.controller;

import java.util.List;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.flightapp.flightservice.dto.FlightRequest;
import com.flightapp.flightservice.dto.FlightResponse;
import com.flightapp.flightservice.model.Flight;
import com.flightapp.flightservice.service.FlightService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/flight")
@RequiredArgsConstructor
public class FlightController {

	private final FlightService flightService;

	@PostMapping("/add")
	public FlightResponse addFlightDetails(@RequestBody FlightRequest flightRequest) {
		return flightService.addNewFlightDetails(flightRequest);
	}

	@GetMapping("/search")
	public List<FlightResponse> getAllFlights() {
		return flightService.findAll();
	}

	@PutMapping("/posts/{postId}/comments/{commentId}")
	public Comment updateComment(@PathVariable(value = "postId") Long postId,
			@PathVariable(value = "commentId") Long commentId, @Valid @RequestBody Comment commentRequest) {
		if (!postRepository.existsById(postId)) {
			throw new ResourceNotFoundException("PostId " + postId + " not found");
		}

		return commentRepository.findById(commentId).map(comment -> {
			comment.setText(commentRequest.getText());
			return commentRepository.save(comment);
		}).orElseThrow(() -> new ResourceNotFoundException("CommentId " + commentId + "not found"));
	}

	@GetMapping("/airline/{airlineId}/flights")
	public Flight getAllFlightsByAirlineId(@PathVariable(value = "airlineId") Long airlineId) {
		return flightService.getAllByAirlineId(airlineId);
	}

}
